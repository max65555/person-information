@page "/data-table"
@using System.Net.Http
@using System.Net.Http.Json
@using System.IO
@using Newtonsoft.Json 
@inject IJSRuntime JS
@inject NavigationManager _navigationManager
@inject HttpClient Http

<div class="container">
    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">FirstName</th>
                <th scope="col">LastName</th>
                <th scope="col">Address</th>
                <th scope="col">Gender</th>
                <th scope="col">Function</th>
            </tr>
        </thead>
        <tbody>
            <!--foreach-->
            @foreach (var i in listOfPerson)
            {
                <tr>
                    <td>@i.personID</td>
                    <td>@i.firstName</td>
                    <td>@i.lastName</td>
                    <td>@i.address</td>
                    <td>@i.gender</td>
                    <td class="function-row">
                        <Comp_Button label="delete"
                                 OnButtonClick="()=>PlayPopUp(i.personID)"></Comp_Button>
                        <Comp_Button label="update"
                                 OnButtonClick="()=>UpdateEvent(i.personID)"></Comp_Button>
                    </td>
                </tr>
            }
            <!--end foreach-->
        </tbody>
    </table>
    @if(isConfirm){
        <Notify NotifyText="Do you want to delete ?" OnMainButtonClick="DeleteIt"
            OnSemiButtonClick="()=>PlayPopUp(currentPersonIdIsGoingToDelete)"></Notify>
    }
</div>
<style>
.function-row{
    display:flex;
}
    .function-row:first-child{
        padding-right:4px;
    }
</style>

@code {
    private int? currentPersonIdIsGoingToDelete;
    private Person[]? listOfPerson;
    private bool isConfirm;
    private dynamic notify;
    protected override async Task OnInitializedAsync(){
        listOfPerson = await Http.GetFromJsonAsync<Person[]>("https://localhost:7126/api/person"); 
    }
    public async void getData(){
        listOfPerson = await Http.GetFromJsonAsync<Person[]>("https://localhost:7126/api/person");
        StateHasChanged();
        //_navigationManager.NavigateTo("data-table",true);
    }

    public void PlayPopUp(int? i){
        currentPersonIdIsGoingToDelete = i;
        isConfirm = !isConfirm;
    }
    public async void DeleteEvent(int? i){
        notify = await Http.DeleteAsync("https://localhost:7126/api/person/" + i);
        Console.WriteLine(notify);
    }
    public async void DeleteIt()
    {
        PlayPopUp(null);
        Console.WriteLine(notify);

        if(currentPersonIdIsGoingToDelete.HasValue){
            DeleteEvent(currentPersonIdIsGoingToDelete);
        }
    }
    public void UpdateEvent(int id){
        _navigationManager.NavigateTo($"update/{id}", true);
    }
    
    //private Stream GetFileStream(){
    //    var fileValue = JsonConvert.SerializeObject(listOfPerson);

    //    var fileStream = new MemoryStream(fileValue);

    //    return fileStream;
    //}
    //private async Task DownloadFileFromStream()
    //{
    //    var fileStream = GetFileStream();
    //    var fileName = "log.json";

    //    using var streamRef = new DotNetStreamReference(stream: fileStream);

    //    await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
    //}
}
